
# Backend Test (Python, MongoDB)


We would like you to build a Flask API defining the routes listed below.

All routes should return a valid json dictionary.

The API should use a mongod server that will contain a "songs" collection loaded from the provided file "songs.json".



List of routes to implement:

- GET /songs
  - Returns a list of songs with some details on them
  - Add possibility to paginate songs.


- GET /songs/avg/difficulty
  - Takes an optional parameter "level" to select only songs from a specific level.
  - Returns the average difficulty for all songs.


- GET /songs/search
  - Takes in parameter a 'message' string to search.
  - Return a list of songs. The search should take into account song's artist and title. The search should be case insensitive.


- POST /songs/rating/<song_id>
  - Takes in parameter a "song_id" and a "rating"
  - This call adds a rating to the song. Ratings should be between 1 and 5.



Bonus:
- It is good practice to write tests!
- Putting your work in a git repository is a plus (via github for example).
